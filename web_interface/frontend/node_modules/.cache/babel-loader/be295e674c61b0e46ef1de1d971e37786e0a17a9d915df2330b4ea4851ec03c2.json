{"ast":null,"code":"import{Navigate,Outlet}from'react-router-dom';import{useAuth}from'../hooks/useAuth';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{redirectPath='/login'}=_ref;const{isAuthenticated,initialCheckDone}=useAuth();// During initial auth check, show nothing (or a loading spinner)\nif(!initialCheckDone){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}// If not authenticated, redirect to login\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:redirectPath,replace:true});}// If authenticated, render the children routes\nreturn/*#__PURE__*/_jsx(Outlet,{});};export default ProtectedRoute;","map":{"version":3,"names":["Navigate","Outlet","useAuth","jsx","_jsx","ProtectedRoute","_ref","redirectPath","isAuthenticated","initialCheckDone","children","to","replace"],"sources":["C:/Users/Josh.DESKTOP-I5ON5NJ/Desktop/Agents/StayUpAgents/web_interface/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\ninterface ProtectedRouteProps {\r\n  redirectPath?: string;\r\n}\r\n\r\nconst ProtectedRoute = ({ redirectPath = '/login' }: ProtectedRouteProps) => {\r\n  const { isAuthenticated, initialCheckDone } = useAuth();\r\n\r\n  // During initial auth check, show nothing (or a loading spinner)\r\n  if (!initialCheckDone) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // If not authenticated, redirect to login\r\n  if (!isAuthenticated) {\r\n    return <Navigate to={redirectPath} replace />;\r\n  }\r\n\r\n  // If authenticated, render the children routes\r\n  return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,OAAO,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAM3C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAsD,IAArD,CAAEC,YAAY,CAAG,QAA8B,CAAC,CAAAD,IAAA,CACtE,KAAM,CAAEE,eAAe,CAAEC,gBAAiB,CAAC,CAAGP,OAAO,CAAC,CAAC,CAEvD;AACA,GAAI,CAACO,gBAAgB,CAAE,CACrB,mBAAOL,IAAA,QAAAM,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA;AACA,GAAI,CAACF,eAAe,CAAE,CACpB,mBAAOJ,IAAA,CAACJ,QAAQ,EAACW,EAAE,CAAEJ,YAAa,CAACK,OAAO,MAAE,CAAC,CAC/C,CAEA;AACA,mBAAOR,IAAA,CAACH,MAAM,GAAE,CAAC,CACnB,CAAC,CAED,cAAe,CAAAI,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}