{"ast":null,"code":"import _objectSpread from\"C:/Users/Josh.DESKTOP-I5ON5NJ/Desktop/Agents/StayUpAgents/web_interface/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';import{Container,Typography,Paper,Divider,Box,Button,TextField,CircularProgress,Alert,Snackbar,FormControl,InputLabel,Select,MenuItem,Switch,FormControlLabel}from'@mui/material';import Grid from'@mui/material/Grid';import{Save as SaveIcon}from'@mui/icons-material';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Settings=()=>{const[loading,setLoading]=useState(false);const[saving,setSaving]=useState(false);const[snackbar,setSnackbar]=useState({open:false,message:'',severity:'success'});const[generalSettings,setGeneralSettings]=useState({appName:'StayUpAgents',logLevel:'info',enableDebugMode:false,maxConcurrentAgents:10});const[databaseSettings,setDatabaseSettings]=useState({dbType:'sqlite',dbPath:'data/stayup_agents.db',enableBackups:true,backupInterval:24});const[agentSettings,setAgentSettings]=useState({defaultTimeout:300,maxRetries:3,retryDelay:60,enableLogging:true});const[notificationSettings,setNotificationSettings]=useState({enableEmail:false,smtpServer:'',smtpPort:587,smtpUsername:'',smtpPassword:'',emailFrom:'',emailTo:''});useEffect(()=>{const loadSettings=async()=>{setLoading(true);try{// In a real app, this would fetch from your API\n// Simulating API call with a timeout\nawait new Promise(resolve=>setTimeout(resolve,1000));// This would normally be data from the API\n// For now we'll just use the initial state\nsetSnackbar({open:true,message:'Settings loaded successfully',severity:'success'});}catch(error){console.error('Error loading settings:',error);setSnackbar({open:true,message:'Failed to load settings',severity:'error'});}finally{setLoading(false);}};loadSettings();},[]);const handleGeneralSettingChange=event=>{const{name,value,checked,type}=event.target;setGeneralSettings(_objectSpread(_objectSpread({},generalSettings),{},{[name]:type==='checkbox'?checked:value}));};const handleDatabaseSettingChange=event=>{const{name,value,checked,type}=event.target;setDatabaseSettings(_objectSpread(_objectSpread({},databaseSettings),{},{[name]:type==='checkbox'?checked:value}));};const handleAgentSettingChange=event=>{const{name,value,checked,type}=event.target;setAgentSettings(_objectSpread(_objectSpread({},agentSettings),{},{[name]:type==='checkbox'?checked:value}));};const handleNotificationSettingChange=event=>{const{name,value,checked,type}=event.target;setNotificationSettings(_objectSpread(_objectSpread({},notificationSettings),{},{[name]:type==='checkbox'?checked:value}));};const handleSave=async()=>{setSaving(true);try{// In a real app, this would send to your API\n// Simulating API call with a timeout\nawait new Promise(resolve=>setTimeout(resolve,1500));setSnackbar({open:true,message:'Settings saved successfully',severity:'success'});}catch(error){console.error('Error saving settings:',error);setSnackbar({open:true,message:'Failed to save settings',severity:'error'});}finally{setSaving(false);}};const handleCloseSnackbar=()=>{setSnackbar(_objectSpread(_objectSpread({},snackbar),{},{open:false}));};if(loading){return/*#__PURE__*/_jsx(Container,{maxWidth:\"lg\",sx:{mt:4,mb:4},children:/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'70vh'},children:/*#__PURE__*/_jsx(CircularProgress,{})})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",sx:{mt:4,mb:4},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:\"Settings\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(SaveIcon,{}),onClick:handleSave,disabled:saving,children:saving?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Save Settings'})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h2\",gutterBottom:true,children:\"General Settings\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3}}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"appName\",label:\"Application Name\",fullWidth:true,variant:\"outlined\",value:generalSettings.appName,onChange:handleGeneralSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"log-level-label\",children:\"Log Level\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"log-level-label\",name:\"logLevel\",value:generalSettings.logLevel,onChange:handleGeneralSettingChange,label:\"Log Level\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"debug\",children:\"Debug\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"info\",children:\"Info\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"warning\",children:\"Warning\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"error\",children:\"Error\"})]})]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"enableDebugMode\",checked:generalSettings.enableDebugMode,onChange:handleGeneralSettingChange,color:\"primary\"}),label:\"Enable Debug Mode\"})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"maxConcurrentAgents\",label:\"Max Concurrent Agents\",type:\"number\",fullWidth:true,variant:\"outlined\",value:generalSettings.maxConcurrentAgents,onChange:handleGeneralSettingChange})})]})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h2\",gutterBottom:true,children:\"Database Settings\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3}}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"db-type-label\",children:\"Database Type\"}),/*#__PURE__*/_jsxs(Select,{labelId:\"db-type-label\",name:\"dbType\",value:databaseSettings.dbType,onChange:handleDatabaseSettingChange,label:\"Database Type\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"sqlite\",children:\"SQLite\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"postgres\",children:\"PostgreSQL\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"mysql\",children:\"MySQL\"})]})]})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"dbPath\",label:\"Database Path\",fullWidth:true,variant:\"outlined\",value:databaseSettings.dbPath,onChange:handleDatabaseSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"enableBackups\",checked:databaseSettings.enableBackups,onChange:handleDatabaseSettingChange,color:\"primary\"}),label:\"Enable Database Backups\"})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"backupInterval\",label:\"Backup Interval (hours)\",type:\"number\",fullWidth:true,variant:\"outlined\",value:databaseSettings.backupInterval,onChange:handleDatabaseSettingChange,disabled:!databaseSettings.enableBackups})})]})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3,mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h2\",gutterBottom:true,children:\"Agent Settings\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3}}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:4},children:/*#__PURE__*/_jsx(TextField,{name:\"defaultTimeout\",label:\"Default Timeout (seconds)\",type:\"number\",fullWidth:true,variant:\"outlined\",value:agentSettings.defaultTimeout,onChange:handleAgentSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:4},children:/*#__PURE__*/_jsx(TextField,{name:\"maxRetries\",label:\"Max Retries\",type:\"number\",fullWidth:true,variant:\"outlined\",value:agentSettings.maxRetries,onChange:handleAgentSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:4},children:/*#__PURE__*/_jsx(TextField,{name:\"retryDelay\",label:\"Retry Delay (seconds)\",type:\"number\",fullWidth:true,variant:\"outlined\",value:agentSettings.retryDelay,onChange:handleAgentSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:12,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"enableLogging\",checked:agentSettings.enableLogging,onChange:handleAgentSettingChange,color:\"primary\"}),label:\"Enable Agent Logging\"})})]})]}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",component:\"h2\",gutterBottom:true,children:\"Notification Settings\"}),/*#__PURE__*/_jsx(Divider,{sx:{mb:3}}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{size:12,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{name:\"enableEmail\",checked:notificationSettings.enableEmail,onChange:handleNotificationSettingChange,color:\"primary\"}),label:\"Enable Email Notifications\"})}),notificationSettings.enableEmail&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"smtpServer\",label:\"SMTP Server\",fullWidth:true,variant:\"outlined\",value:notificationSettings.smtpServer,onChange:handleNotificationSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"smtpPort\",label:\"SMTP Port\",type:\"number\",fullWidth:true,variant:\"outlined\",value:notificationSettings.smtpPort,onChange:handleNotificationSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"smtpUsername\",label:\"SMTP Username\",fullWidth:true,variant:\"outlined\",value:notificationSettings.smtpUsername,onChange:handleNotificationSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"smtpPassword\",label:\"SMTP Password\",fullWidth:true,variant:\"outlined\",type:\"password\",value:notificationSettings.smtpPassword,onChange:handleNotificationSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"emailFrom\",label:\"Email From\",fullWidth:true,variant:\"outlined\",value:notificationSettings.emailFrom,onChange:handleNotificationSettingChange})}),/*#__PURE__*/_jsx(Grid,{size:{xs:12,md:6},children:/*#__PURE__*/_jsx(TextField,{name:\"emailTo\",label:\"Email To (separate multiple with commas)\",fullWidth:true,variant:\"outlined\",value:notificationSettings.emailTo,onChange:handleNotificationSettingChange})})]})]})]}),/*#__PURE__*/_jsx(Snackbar,{open:snackbar.open,autoHideDuration:6000,onClose:handleCloseSnackbar,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnackbar,severity:snackbar.severity,sx:{width:'100%'},children:snackbar.message})})]});};export default Settings;","map":{"version":3,"names":["useState","useEffect","Container","Typography","Paper","Divider","Box","Button","TextField","CircularProgress","Alert","Snackbar","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Grid","Save","SaveIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Settings","loading","setLoading","saving","setSaving","snackbar","setSnackbar","open","message","severity","generalSettings","setGeneralSettings","appName","logLevel","enableDebugMode","maxConcurrentAgents","databaseSettings","setDatabaseSettings","dbType","dbPath","enableBackups","backupInterval","agentSettings","setAgentSettings","defaultTimeout","maxRetries","retryDelay","enableLogging","notificationSettings","setNotificationSettings","enableEmail","smtpServer","smtpPort","smtpUsername","smtpPassword","emailFrom","emailTo","loadSettings","Promise","resolve","setTimeout","error","console","handleGeneralSettingChange","event","name","value","checked","type","target","_objectSpread","handleDatabaseSettingChange","handleAgentSettingChange","handleNotificationSettingChange","handleSave","handleCloseSnackbar","maxWidth","sx","mt","mb","children","display","justifyContent","alignItems","height","variant","component","startIcon","onClick","disabled","size","p","gutterBottom","container","spacing","xs","md","label","fullWidth","onChange","id","labelId","control","color","autoHideDuration","onClose","width"],"sources":["C:/Users/Josh.DESKTOP-I5ON5NJ/Desktop/Agents/StayUpAgents/web_interface/frontend/src/pages/Settings.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container, Typography, Paper, Divider, Box, Button,\r\n  TextField, CircularProgress, Alert, Snackbar, \r\n  FormControl, InputLabel, Select, MenuItem, Switch,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/Grid';\r\nimport { Save as SaveIcon } from '@mui/icons-material';\r\n\r\nconst Settings = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [saving, setSaving] = useState(false);\r\n  const [snackbar, setSnackbar] = useState({\r\n    open: false,\r\n    message: '',\r\n    severity: 'success' as 'success' | 'error' | 'info' | 'warning'\r\n  });\r\n  \r\n  const [generalSettings, setGeneralSettings] = useState({\r\n    appName: 'StayUpAgents',\r\n    logLevel: 'info',\r\n    enableDebugMode: false,\r\n    maxConcurrentAgents: 10\r\n  });\r\n  \r\n  const [databaseSettings, setDatabaseSettings] = useState({\r\n    dbType: 'sqlite',\r\n    dbPath: 'data/stayup_agents.db',\r\n    enableBackups: true,\r\n    backupInterval: 24\r\n  });\r\n  \r\n  const [agentSettings, setAgentSettings] = useState({\r\n    defaultTimeout: 300,\r\n    maxRetries: 3,\r\n    retryDelay: 60,\r\n    enableLogging: true\r\n  });\r\n  \r\n  const [notificationSettings, setNotificationSettings] = useState({\r\n    enableEmail: false,\r\n    smtpServer: '',\r\n    smtpPort: 587,\r\n    smtpUsername: '',\r\n    smtpPassword: '',\r\n    emailFrom: '',\r\n    emailTo: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadSettings = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // In a real app, this would fetch from your API\r\n        // Simulating API call with a timeout\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        \r\n        // This would normally be data from the API\r\n        // For now we'll just use the initial state\r\n        \r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Settings loaded successfully',\r\n          severity: 'success'\r\n        });\r\n      } catch (error) {\r\n        console.error('Error loading settings:', error);\r\n        setSnackbar({\r\n          open: true,\r\n          message: 'Failed to load settings',\r\n          severity: 'error'\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadSettings();\r\n  }, []);\r\n  \r\n  const handleGeneralSettingChange = (event: any) => {\r\n    const { name, value, checked, type } = event.target;\r\n    setGeneralSettings({\r\n      ...generalSettings,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    });\r\n  };\r\n  \r\n  const handleDatabaseSettingChange = (event: any) => {\r\n    const { name, value, checked, type } = event.target;\r\n    setDatabaseSettings({\r\n      ...databaseSettings,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    });\r\n  };\r\n  \r\n  const handleAgentSettingChange = (event: any) => {\r\n    const { name, value, checked, type } = event.target;\r\n    setAgentSettings({\r\n      ...agentSettings,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    });\r\n  };\r\n  \r\n  const handleNotificationSettingChange = (event: any) => {\r\n    const { name, value, checked, type } = event.target;\r\n    setNotificationSettings({\r\n      ...notificationSettings,\r\n      [name]: type === 'checkbox' ? checked : value\r\n    });\r\n  };\r\n  \r\n  const handleSave = async () => {\r\n    setSaving(true);\r\n    try {\r\n      // In a real app, this would send to your API\r\n      // Simulating API call with a timeout\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n      \r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Settings saved successfully',\r\n        severity: 'success'\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n      setSnackbar({\r\n        open: true,\r\n        message: 'Failed to save settings',\r\n        severity: 'error'\r\n      });\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n  \r\n  const handleCloseSnackbar = () => {\r\n    setSnackbar({\r\n      ...snackbar,\r\n      open: false\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '70vh' }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          Settings\r\n        </Typography>\r\n        <Button \r\n          variant=\"contained\" \r\n          startIcon={<SaveIcon />} \r\n          onClick={handleSave}\r\n          disabled={saving}\r\n        >\r\n          {saving ? <CircularProgress size={24} /> : 'Save Settings'}\r\n        </Button>\r\n      </Box>\r\n\r\n      <Paper sx={{ p: 3, mb: 4 }}>\r\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n          General Settings\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        <Grid container spacing={3}>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <TextField\r\n              name=\"appName\"\r\n              label=\"Application Name\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={generalSettings.appName}\r\n              onChange={handleGeneralSettingChange}\r\n            />\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"log-level-label\">Log Level</InputLabel>\r\n              <Select\r\n                labelId=\"log-level-label\"\r\n                name=\"logLevel\"\r\n                value={generalSettings.logLevel}\r\n                onChange={handleGeneralSettingChange}\r\n                label=\"Log Level\"\r\n              >\r\n                <MenuItem value=\"debug\">Debug</MenuItem>\r\n                <MenuItem value=\"info\">Info</MenuItem>\r\n                <MenuItem value=\"warning\">Warning</MenuItem>\r\n                <MenuItem value=\"error\">Error</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  name=\"enableDebugMode\"\r\n                  checked={generalSettings.enableDebugMode}\r\n                  onChange={handleGeneralSettingChange}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable Debug Mode\"\r\n            />\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <TextField\r\n              name=\"maxConcurrentAgents\"\r\n              label=\"Max Concurrent Agents\"\r\n              type=\"number\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={generalSettings.maxConcurrentAgents}\r\n              onChange={handleGeneralSettingChange}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Paper sx={{ p: 3, mb: 4 }}>\r\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n          Database Settings\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        <Grid container spacing={3}>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"db-type-label\">Database Type</InputLabel>\r\n              <Select\r\n                labelId=\"db-type-label\"\r\n                name=\"dbType\"\r\n                value={databaseSettings.dbType}\r\n                onChange={handleDatabaseSettingChange}\r\n                label=\"Database Type\"\r\n              >\r\n                <MenuItem value=\"sqlite\">SQLite</MenuItem>\r\n                <MenuItem value=\"postgres\">PostgreSQL</MenuItem>\r\n                <MenuItem value=\"mysql\">MySQL</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <TextField\r\n              name=\"dbPath\"\r\n              label=\"Database Path\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={databaseSettings.dbPath}\r\n              onChange={handleDatabaseSettingChange}\r\n            />\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  name=\"enableBackups\"\r\n                  checked={databaseSettings.enableBackups}\r\n                  onChange={handleDatabaseSettingChange}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable Database Backups\"\r\n            />\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 6 }}>\r\n            <TextField\r\n              name=\"backupInterval\"\r\n              label=\"Backup Interval (hours)\"\r\n              type=\"number\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={databaseSettings.backupInterval}\r\n              onChange={handleDatabaseSettingChange}\r\n              disabled={!databaseSettings.enableBackups}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Paper sx={{ p: 3, mb: 4 }}>\r\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n          Agent Settings\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        <Grid container spacing={3}>\r\n          <Grid size={{ xs: 12, md: 4 }}>\r\n            <TextField\r\n              name=\"defaultTimeout\"\r\n              label=\"Default Timeout (seconds)\"\r\n              type=\"number\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={agentSettings.defaultTimeout}\r\n              onChange={handleAgentSettingChange}\r\n            />\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 4 }}>\r\n            <TextField\r\n              name=\"maxRetries\"\r\n              label=\"Max Retries\"\r\n              type=\"number\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={agentSettings.maxRetries}\r\n              onChange={handleAgentSettingChange}\r\n            />\r\n          </Grid>\r\n          <Grid size={{ xs: 12, md: 4 }}>\r\n            <TextField\r\n              name=\"retryDelay\"\r\n              label=\"Retry Delay (seconds)\"\r\n              type=\"number\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={agentSettings.retryDelay}\r\n              onChange={handleAgentSettingChange}\r\n            />\r\n          </Grid>\r\n          <Grid size={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  name=\"enableLogging\"\r\n                  checked={agentSettings.enableLogging}\r\n                  onChange={handleAgentSettingChange}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable Agent Logging\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Paper sx={{ p: 3 }}>\r\n        <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n          Notification Settings\r\n        </Typography>\r\n        <Divider sx={{ mb: 3 }} />\r\n        <Grid container spacing={3}>\r\n          <Grid size={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  name=\"enableEmail\"\r\n                  checked={notificationSettings.enableEmail}\r\n                  onChange={handleNotificationSettingChange}\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Enable Email Notifications\"\r\n            />\r\n          </Grid>\r\n          \r\n          {notificationSettings.enableEmail && (\r\n            <>\r\n              <Grid size={{ xs: 12, md: 6 }}>\r\n                <TextField\r\n                  name=\"smtpServer\"\r\n                  label=\"SMTP Server\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={notificationSettings.smtpServer}\r\n                  onChange={handleNotificationSettingChange}\r\n                />\r\n              </Grid>\r\n              <Grid size={{ xs: 12, md: 6 }}>\r\n                <TextField\r\n                  name=\"smtpPort\"\r\n                  label=\"SMTP Port\"\r\n                  type=\"number\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={notificationSettings.smtpPort}\r\n                  onChange={handleNotificationSettingChange}\r\n                />\r\n              </Grid>\r\n              <Grid size={{ xs: 12, md: 6 }}>\r\n                <TextField\r\n                  name=\"smtpUsername\"\r\n                  label=\"SMTP Username\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={notificationSettings.smtpUsername}\r\n                  onChange={handleNotificationSettingChange}\r\n                />\r\n              </Grid>\r\n              <Grid size={{ xs: 12, md: 6 }}>\r\n                <TextField\r\n                  name=\"smtpPassword\"\r\n                  label=\"SMTP Password\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  value={notificationSettings.smtpPassword}\r\n                  onChange={handleNotificationSettingChange}\r\n                />\r\n              </Grid>\r\n              <Grid size={{ xs: 12, md: 6 }}>\r\n                <TextField\r\n                  name=\"emailFrom\"\r\n                  label=\"Email From\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={notificationSettings.emailFrom}\r\n                  onChange={handleNotificationSettingChange}\r\n                />\r\n              </Grid>\r\n              <Grid size={{ xs: 12, md: 6 }}>\r\n                <TextField\r\n                  name=\"emailTo\"\r\n                  label=\"Email To (separate multiple with commas)\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  value={notificationSettings.emailTo}\r\n                  onChange={handleNotificationSettingChange}\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Paper>\r\n\r\n      <Snackbar \r\n        open={snackbar.open} \r\n        autoHideDuration={6000} \r\n        onClose={handleCloseSnackbar}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseSnackbar} \r\n          severity={snackbar.severity}\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {snackbar.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Settings;"],"mappings":"qKAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OACEC,SAAS,CAAEC,UAAU,CAAEC,KAAK,CAAEC,OAAO,CAAEC,GAAG,CAAEC,MAAM,CAClDC,SAAS,CAAEC,gBAAgB,CAAEC,KAAK,CAAEC,QAAQ,CAC5CC,WAAW,CAAEC,UAAU,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,MAAM,CACjDC,gBAAgB,KACX,eAAe,CACtB,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CACrC,OAASC,IAAI,GAAI,CAAAC,QAAQ,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvD,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG7B,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC8B,MAAM,CAAEC,SAAS,CAAC,CAAG/B,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAACgC,QAAQ,CAAEC,WAAW,CAAC,CAAGjC,QAAQ,CAAC,CACvCkC,IAAI,CAAE,KAAK,CACXC,OAAO,CAAE,EAAE,CACXC,QAAQ,CAAE,SACZ,CAAC,CAAC,CAEF,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGtC,QAAQ,CAAC,CACrDuC,OAAO,CAAE,cAAc,CACvBC,QAAQ,CAAE,MAAM,CAChBC,eAAe,CAAE,KAAK,CACtBC,mBAAmB,CAAE,EACvB,CAAC,CAAC,CAEF,KAAM,CAACC,gBAAgB,CAAEC,mBAAmB,CAAC,CAAG5C,QAAQ,CAAC,CACvD6C,MAAM,CAAE,QAAQ,CAChBC,MAAM,CAAE,uBAAuB,CAC/BC,aAAa,CAAE,IAAI,CACnBC,cAAc,CAAE,EAClB,CAAC,CAAC,CAEF,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGlD,QAAQ,CAAC,CACjDmD,cAAc,CAAE,GAAG,CACnBC,UAAU,CAAE,CAAC,CACbC,UAAU,CAAE,EAAE,CACdC,aAAa,CAAE,IACjB,CAAC,CAAC,CAEF,KAAM,CAACC,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGxD,QAAQ,CAAC,CAC/DyD,WAAW,CAAE,KAAK,CAClBC,UAAU,CAAE,EAAE,CACdC,QAAQ,CAAE,GAAG,CACbC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,EACX,CAAC,CAAC,CAEF9D,SAAS,CAAC,IAAM,CACd,KAAM,CAAA+D,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/BnC,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF;AACA;AACA,KAAM,IAAI,CAAAoC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,CAAC,CAEvD;AACA;AAEAjC,WAAW,CAAC,CACVC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,8BAA8B,CACvCC,QAAQ,CAAE,SACZ,CAAC,CAAC,CACJ,CAAE,MAAOgC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CnC,WAAW,CAAC,CACVC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,yBAAyB,CAClCC,QAAQ,CAAE,OACZ,CAAC,CAAC,CACJ,CAAC,OAAS,CACRP,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDmC,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,0BAA0B,CAAIC,KAAU,EAAK,CACjD,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAGJ,KAAK,CAACK,MAAM,CACnDtC,kBAAkB,CAAAuC,aAAA,CAAAA,aAAA,IACbxC,eAAe,MAClB,CAACmC,IAAI,EAAGG,IAAI,GAAK,UAAU,CAAGD,OAAO,CAAGD,KAAK,EAC9C,CAAC,CACJ,CAAC,CAED,KAAM,CAAAK,2BAA2B,CAAIP,KAAU,EAAK,CAClD,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAGJ,KAAK,CAACK,MAAM,CACnDhC,mBAAmB,CAAAiC,aAAA,CAAAA,aAAA,IACdlC,gBAAgB,MACnB,CAAC6B,IAAI,EAAGG,IAAI,GAAK,UAAU,CAAGD,OAAO,CAAGD,KAAK,EAC9C,CAAC,CACJ,CAAC,CAED,KAAM,CAAAM,wBAAwB,CAAIR,KAAU,EAAK,CAC/C,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAGJ,KAAK,CAACK,MAAM,CACnD1B,gBAAgB,CAAA2B,aAAA,CAAAA,aAAA,IACX5B,aAAa,MAChB,CAACuB,IAAI,EAAGG,IAAI,GAAK,UAAU,CAAGD,OAAO,CAAGD,KAAK,EAC9C,CAAC,CACJ,CAAC,CAED,KAAM,CAAAO,+BAA+B,CAAIT,KAAU,EAAK,CACtD,KAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,OAAO,CAAEC,IAAK,CAAC,CAAGJ,KAAK,CAACK,MAAM,CACnDpB,uBAAuB,CAAAqB,aAAA,CAAAA,aAAA,IAClBtB,oBAAoB,MACvB,CAACiB,IAAI,EAAGG,IAAI,GAAK,UAAU,CAAGD,OAAO,CAAGD,KAAK,EAC9C,CAAC,CACJ,CAAC,CAED,KAAM,CAAAQ,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7BlD,SAAS,CAAC,IAAI,CAAC,CACf,GAAI,CACF;AACA;AACA,KAAM,IAAI,CAAAkC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,CAAC,CAEvDjC,WAAW,CAAC,CACVC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,6BAA6B,CACtCC,QAAQ,CAAE,SACZ,CAAC,CAAC,CACJ,CAAE,MAAOgC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9CnC,WAAW,CAAC,CACVC,IAAI,CAAE,IAAI,CACVC,OAAO,CAAE,yBAAyB,CAClCC,QAAQ,CAAE,OACZ,CAAC,CAAC,CACJ,CAAC,OAAS,CACRL,SAAS,CAAC,KAAK,CAAC,CAClB,CACF,CAAC,CAED,KAAM,CAAAmD,mBAAmB,CAAGA,CAAA,GAAM,CAChCjD,WAAW,CAAA4C,aAAA,CAAAA,aAAA,IACN7C,QAAQ,MACXE,IAAI,CAAE,KAAK,EACZ,CAAC,CACJ,CAAC,CAED,GAAIN,OAAO,CAAE,CACX,mBACEN,IAAA,CAACpB,SAAS,EAACiF,QAAQ,CAAC,IAAI,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,cAC5CjE,IAAA,CAAChB,GAAG,EAAC8E,EAAE,CAAE,CAAEI,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAJ,QAAA,cAC3FjE,IAAA,CAACb,gBAAgB,GAAE,CAAC,CACjB,CAAC,CACG,CAAC,CAEhB,CAEA,mBACEe,KAAA,CAACtB,SAAS,EAACiF,QAAQ,CAAC,IAAI,CAACC,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAC,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eAC5C/D,KAAA,CAAClB,GAAG,EAAC8E,EAAE,CAAE,CAAEI,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEC,UAAU,CAAE,QAAQ,CAAEJ,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eACzFjE,IAAA,CAACnB,UAAU,EAACyF,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAAN,QAAA,CAAC,UAExC,CAAY,CAAC,cACbjE,IAAA,CAACf,MAAM,EACLqF,OAAO,CAAC,WAAW,CACnBE,SAAS,cAAExE,IAAA,CAACF,QAAQ,GAAE,CAAE,CACxB2E,OAAO,CAAEd,UAAW,CACpBe,QAAQ,CAAElE,MAAO,CAAAyD,QAAA,CAEhBzD,MAAM,cAAGR,IAAA,CAACb,gBAAgB,EAACwF,IAAI,CAAE,EAAG,CAAE,CAAC,CAAG,eAAe,CACpD,CAAC,EACN,CAAC,cAENzE,KAAA,CAACpB,KAAK,EAACgF,EAAE,CAAE,CAAEc,CAAC,CAAE,CAAC,CAAEZ,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eACzBjE,IAAA,CAACnB,UAAU,EAACyF,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACM,YAAY,MAAAZ,QAAA,CAAC,kBAErD,CAAY,CAAC,cACbjE,IAAA,CAACjB,OAAO,EAAC+E,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC1B9D,KAAA,CAACN,IAAI,EAACkF,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAd,QAAA,eACzBjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,SAAS,CACdgC,KAAK,CAAC,kBAAkB,CACxBC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAEpC,eAAe,CAACE,OAAQ,CAC/BmE,QAAQ,CAAEpC,0BAA2B,CACtC,CAAC,CACE,CAAC,cACPhD,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5B/D,KAAA,CAACZ,WAAW,EAAC6F,SAAS,MAAAlB,QAAA,eACpBjE,IAAA,CAACT,UAAU,EAAC8F,EAAE,CAAC,iBAAiB,CAAApB,QAAA,CAAC,WAAS,CAAY,CAAC,cACvD/D,KAAA,CAACV,MAAM,EACL8F,OAAO,CAAC,iBAAiB,CACzBpC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAEpC,eAAe,CAACG,QAAS,CAChCkE,QAAQ,CAAEpC,0BAA2B,CACrCkC,KAAK,CAAC,WAAW,CAAAjB,QAAA,eAEjBjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,OAAO,CAAAc,QAAA,CAAC,OAAK,CAAU,CAAC,cACxCjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,MAAM,CAAAc,QAAA,CAAC,MAAI,CAAU,CAAC,cACtCjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,SAAS,CAAAc,QAAA,CAAC,SAAO,CAAU,CAAC,cAC5CjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,OAAO,CAAAc,QAAA,CAAC,OAAK,CAAU,CAAC,EAClC,CAAC,EACE,CAAC,CACV,CAAC,cACPjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACL,gBAAgB,EACf4F,OAAO,cACLvF,IAAA,CAACN,MAAM,EACLwD,IAAI,CAAC,iBAAiB,CACtBE,OAAO,CAAErC,eAAe,CAACI,eAAgB,CACzCiE,QAAQ,CAAEpC,0BAA2B,CACrCwC,KAAK,CAAC,SAAS,CAChB,CACF,CACDN,KAAK,CAAC,mBAAmB,CAC1B,CAAC,CACE,CAAC,cACPlF,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,qBAAqB,CAC1BgC,KAAK,CAAC,uBAAuB,CAC7B7B,IAAI,CAAC,QAAQ,CACb8B,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAEpC,eAAe,CAACK,mBAAoB,CAC3CgE,QAAQ,CAAEpC,0BAA2B,CACtC,CAAC,CACE,CAAC,EACH,CAAC,EACF,CAAC,cAER9C,KAAA,CAACpB,KAAK,EAACgF,EAAE,CAAE,CAAEc,CAAC,CAAE,CAAC,CAAEZ,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eACzBjE,IAAA,CAACnB,UAAU,EAACyF,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACM,YAAY,MAAAZ,QAAA,CAAC,mBAErD,CAAY,CAAC,cACbjE,IAAA,CAACjB,OAAO,EAAC+E,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC1B9D,KAAA,CAACN,IAAI,EAACkF,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAd,QAAA,eACzBjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5B/D,KAAA,CAACZ,WAAW,EAAC6F,SAAS,MAAAlB,QAAA,eACpBjE,IAAA,CAACT,UAAU,EAAC8F,EAAE,CAAC,eAAe,CAAApB,QAAA,CAAC,eAAa,CAAY,CAAC,cACzD/D,KAAA,CAACV,MAAM,EACL8F,OAAO,CAAC,eAAe,CACvBpC,IAAI,CAAC,QAAQ,CACbC,KAAK,CAAE9B,gBAAgB,CAACE,MAAO,CAC/B6D,QAAQ,CAAE5B,2BAA4B,CACtC0B,KAAK,CAAC,eAAe,CAAAjB,QAAA,eAErBjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,QAAQ,CAAAc,QAAA,CAAC,QAAM,CAAU,CAAC,cAC1CjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,UAAU,CAAAc,QAAA,CAAC,YAAU,CAAU,CAAC,cAChDjE,IAAA,CAACP,QAAQ,EAAC0D,KAAK,CAAC,OAAO,CAAAc,QAAA,CAAC,OAAK,CAAU,CAAC,EAClC,CAAC,EACE,CAAC,CACV,CAAC,cACPjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,QAAQ,CACbgC,KAAK,CAAC,eAAe,CACrBC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAE9B,gBAAgB,CAACG,MAAO,CAC/B4D,QAAQ,CAAE5B,2BAA4B,CACvC,CAAC,CACE,CAAC,cACPxD,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACL,gBAAgB,EACf4F,OAAO,cACLvF,IAAA,CAACN,MAAM,EACLwD,IAAI,CAAC,eAAe,CACpBE,OAAO,CAAE/B,gBAAgB,CAACI,aAAc,CACxC2D,QAAQ,CAAE5B,2BAA4B,CACtCgC,KAAK,CAAC,SAAS,CAChB,CACF,CACDN,KAAK,CAAC,yBAAyB,CAChC,CAAC,CACE,CAAC,cACPlF,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,gBAAgB,CACrBgC,KAAK,CAAC,yBAAyB,CAC/B7B,IAAI,CAAC,QAAQ,CACb8B,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAE9B,gBAAgB,CAACK,cAAe,CACvC0D,QAAQ,CAAE5B,2BAA4B,CACtCkB,QAAQ,CAAE,CAACrD,gBAAgB,CAACI,aAAc,CAC3C,CAAC,CACE,CAAC,EACH,CAAC,EACF,CAAC,cAERvB,KAAA,CAACpB,KAAK,EAACgF,EAAE,CAAE,CAAEc,CAAC,CAAE,CAAC,CAAEZ,EAAE,CAAE,CAAE,CAAE,CAAAC,QAAA,eACzBjE,IAAA,CAACnB,UAAU,EAACyF,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACM,YAAY,MAAAZ,QAAA,CAAC,gBAErD,CAAY,CAAC,cACbjE,IAAA,CAACjB,OAAO,EAAC+E,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC1B9D,KAAA,CAACN,IAAI,EAACkF,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAd,QAAA,eACzBjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,gBAAgB,CACrBgC,KAAK,CAAC,2BAA2B,CACjC7B,IAAI,CAAC,QAAQ,CACb8B,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAExB,aAAa,CAACE,cAAe,CACpCuD,QAAQ,CAAE3B,wBAAyB,CACpC,CAAC,CACE,CAAC,cACPzD,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,YAAY,CACjBgC,KAAK,CAAC,aAAa,CACnB7B,IAAI,CAAC,QAAQ,CACb8B,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAExB,aAAa,CAACG,UAAW,CAChCsD,QAAQ,CAAE3B,wBAAyB,CACpC,CAAC,CACE,CAAC,cACPzD,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,YAAY,CACjBgC,KAAK,CAAC,uBAAuB,CAC7B7B,IAAI,CAAC,QAAQ,CACb8B,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAExB,aAAa,CAACI,UAAW,CAChCqD,QAAQ,CAAE3B,wBAAyB,CACpC,CAAC,CACE,CAAC,cACPzD,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,EAAG,CAAAV,QAAA,cACbjE,IAAA,CAACL,gBAAgB,EACf4F,OAAO,cACLvF,IAAA,CAACN,MAAM,EACLwD,IAAI,CAAC,eAAe,CACpBE,OAAO,CAAEzB,aAAa,CAACK,aAAc,CACrCoD,QAAQ,CAAE3B,wBAAyB,CACnC+B,KAAK,CAAC,SAAS,CAChB,CACF,CACDN,KAAK,CAAC,sBAAsB,CAC7B,CAAC,CACE,CAAC,EACH,CAAC,EACF,CAAC,cAERhF,KAAA,CAACpB,KAAK,EAACgF,EAAE,CAAE,CAAEc,CAAC,CAAE,CAAE,CAAE,CAAAX,QAAA,eAClBjE,IAAA,CAACnB,UAAU,EAACyF,OAAO,CAAC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACM,YAAY,MAAAZ,QAAA,CAAC,uBAErD,CAAY,CAAC,cACbjE,IAAA,CAACjB,OAAO,EAAC+E,EAAE,CAAE,CAAEE,EAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAC1B9D,KAAA,CAACN,IAAI,EAACkF,SAAS,MAACC,OAAO,CAAE,CAAE,CAAAd,QAAA,eACzBjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,EAAG,CAAAV,QAAA,cACbjE,IAAA,CAACL,gBAAgB,EACf4F,OAAO,cACLvF,IAAA,CAACN,MAAM,EACLwD,IAAI,CAAC,aAAa,CAClBE,OAAO,CAAEnB,oBAAoB,CAACE,WAAY,CAC1CiD,QAAQ,CAAE1B,+BAAgC,CAC1C8B,KAAK,CAAC,SAAS,CAChB,CACF,CACDN,KAAK,CAAC,4BAA4B,CACnC,CAAC,CACE,CAAC,CAENjD,oBAAoB,CAACE,WAAW,eAC/BjC,KAAA,CAAAE,SAAA,EAAA6D,QAAA,eACEjE,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,YAAY,CACjBgC,KAAK,CAAC,aAAa,CACnBC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAElB,oBAAoB,CAACG,UAAW,CACvCgD,QAAQ,CAAE1B,+BAAgC,CAC3C,CAAC,CACE,CAAC,cACP1D,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,UAAU,CACfgC,KAAK,CAAC,WAAW,CACjB7B,IAAI,CAAC,QAAQ,CACb8B,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAElB,oBAAoB,CAACI,QAAS,CACrC+C,QAAQ,CAAE1B,+BAAgC,CAC3C,CAAC,CACE,CAAC,cACP1D,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,cAAc,CACnBgC,KAAK,CAAC,eAAe,CACrBC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAElB,oBAAoB,CAACK,YAAa,CACzC8C,QAAQ,CAAE1B,+BAAgC,CAC3C,CAAC,CACE,CAAC,cACP1D,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,cAAc,CACnBgC,KAAK,CAAC,eAAe,CACrBC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBjB,IAAI,CAAC,UAAU,CACfF,KAAK,CAAElB,oBAAoB,CAACM,YAAa,CACzC6C,QAAQ,CAAE1B,+BAAgC,CAC3C,CAAC,CACE,CAAC,cACP1D,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,WAAW,CAChBgC,KAAK,CAAC,YAAY,CAClBC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAElB,oBAAoB,CAACO,SAAU,CACtC4C,QAAQ,CAAE1B,+BAAgC,CAC3C,CAAC,CACE,CAAC,cACP1D,IAAA,CAACJ,IAAI,EAAC+E,IAAI,CAAE,CAAEK,EAAE,CAAE,EAAE,CAAEC,EAAE,CAAE,CAAE,CAAE,CAAAhB,QAAA,cAC5BjE,IAAA,CAACd,SAAS,EACRgE,IAAI,CAAC,SAAS,CACdgC,KAAK,CAAC,0CAA0C,CAChDC,SAAS,MACTb,OAAO,CAAC,UAAU,CAClBnB,KAAK,CAAElB,oBAAoB,CAACQ,OAAQ,CACpC2C,QAAQ,CAAE1B,+BAAgC,CAC3C,CAAC,CACE,CAAC,EACP,CACH,EACG,CAAC,EACF,CAAC,cAER1D,IAAA,CAACX,QAAQ,EACPuB,IAAI,CAAEF,QAAQ,CAACE,IAAK,CACpB6E,gBAAgB,CAAE,IAAK,CACvBC,OAAO,CAAE9B,mBAAoB,CAAAK,QAAA,cAE7BjE,IAAA,CAACZ,KAAK,EACJsG,OAAO,CAAE9B,mBAAoB,CAC7B9C,QAAQ,CAAEJ,QAAQ,CAACI,QAAS,CAC5BgD,EAAE,CAAE,CAAE6B,KAAK,CAAE,MAAO,CAAE,CAAA1B,QAAA,CAErBvD,QAAQ,CAACG,OAAO,CACZ,CAAC,CACA,CAAC,EACF,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAR,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}